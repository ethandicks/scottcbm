OUTCH = $FFD2 ;PRINT CHR
CR = $D ;CARRAIGE RETURN
SP = $20 ;SPACE
CLS = $93 ;CLR SCREEN CHR
RVSON = $18
INDEX = $FB ;INDIRECT INDEX
CGETL = $FFE4 ;GET VECTOR
CINCH = $FFCF ;INPUT LINE WITH CURSOR
PCR = $E84C ;ADDRESS OF UPPER/LOWER CASE CONTROL
 ; OTHER SYSTEM VARIABLES
BUFLEN = $50 ;SIZE OF INPUT BUFFER
ZBFLEN = $10 ;SIZE OF SAFETY BUFFER
FILLEN = $70 ;RELATIVE ADDRESS OF BEGINNING OF SYSTEM PAGE GAME STORE
ILN = $50 ;NUMBER OF OBJECTS
 ; SYSTEM MESSAGES
 ; (SAME FOR ALL ADVENTURES)
*=$5000
PROMPT .BYT $D7,'HAT NOW? ',$00
MSGA .BYT $93,'          ',RVSON
 .BYT $D7,$C5,$CC,$C3,$CF,$CD,$C5,SP,$D4,$CF,SP
 .BYT $C1,$C4,$D6,$C5,$CE,$D4,$D6,$D2,$C5,CR,CR
 .BYT '   ',$D4,'HE OBJECT OF YOUR ADVENTURE IS TO',CR
 .BYT 'PROPER PLACE.',CR,CR
 .BYT '   ',$C9,$27,'M YOUR GUIDE. ',$C7,'IVE ME COMMANDS THAT'
 .BYT 'CONSIST OF A VERB AND A NOUN.',CR,CR
 .BYT 'I.E., GO EAST, TAKE KEY, CLIMB TREE,',CR
 .BYT 'SAVE GAME, TAKE INVE',$00
MSGB
 .BYT 'NTORY.',CR,CR
 .BYT '   ',$D9,'OU',$27,'LL NEED SPECIAL ITEMS TO DO SOME',CR
 .BYT 'THINGS, BUT ',$C9,$27,'M SURE YOU',$27,'LL BE A GOOD',CR
 .BYT 'ADVENTURER AND FIGURE THESE THINGS OUT.',CR,CR,CR,CR,CR
 .BYT '         ',$C8,'APPY ADVENTURING!',CR,CR
 .BYT '     ',$C8,'IT ANY KEY TO BEGIN '
 .BYT $C1,$C4,$D6,$C5,$CE,$D4,$D6,$D2,$C5,$00
NORTH .BYT 'NORTH',$0
SOUTH .BYT 'SOUTH',$0
EAST .BYT 'EAST',$0
WEST .BYT 'WEST',$0
UP .BYT 'UP',$0
DOWN .BYT 'DOWN',$0
IMTXT .BYT $C9,$27,$CD,$20,$C9,$CE,$20,$C1,$20,0
DRKTXT .BYT $C9,'T''S TOO DARK TO SEE.',0
 ; THE REMAINING DATA
 ; MUST BE CUSTOM MADE
 ; FOR EACH PROGRAM
*=$4000 ;TEMPORARY BEGINNING OF DATA
ROOMP  *=*+$78 ;POINTERS TO ROOM TEXT
ITEMP *=*+$88 ;POINTERS TO ITEMS
MSGP *=*+$100 ;POINTERS TO MESSAGES
RNORT *=*+$40 ;NORTH ROOMS
RSOUT *=*+$40 ;SOUTH ROOMS
REAST *=*+$40 ;EAST ROOMS
RWEST *=*+$40 ;WEST ROOMS
RUP *=*+$40 ;UP ROOMS
RDOWN *=*+$40 ;DOWN ROOMS
VERBT *=*+$100 ;LIST OF VERBS
NOUNT *=*+$100 ;LIST OF NOUNS
GETT *=*+$100 ;LIST OF LIFTABLE OBJECTS
SENMAT *=*+$B00 ;SENTENCE MATRIX
ITEMT *=*+$600 ;TEXT OF ITEMS
ROOMT *=*+$600 ;TEXT OF ROOMS
MESGT *=*+$900 ;MESSAGE TEXT
SYSPAG *=*+$100 ;STORAGE OF SYSTEM PAGE
 ;LIST OF SYSTEM VARIABLES
INPBUF *=*+$50
ZBUF *=*+$10
COMSTR *=*+8
JUMP *=*+2 ;INDIRECT JUMP LOCATION
MAXIT *=*+1 ;MAXIMUM ITEM NUMBER
LIMBO *=*+1 ;NUMBER OF LIMBO ROOM
SFBIT *=*+1 ;POINTER TO SHORE FLAG
VERB *=*+1 ;CURRENT VERB NUMBER
NOUN *=*+1 ;CURRENT NOUN NUMBER
SFTAB *=*+$10
ILTAB *=*+$50
ROOMN *=*+1 ;CURRENT ROOM NUMBER
DARKF *=*+1 ;$FF = DARK $00 = LIGHTREADY.
LIGTUR *=*+1 ;TURNS OF LIGHT LEFT
LIGHT *=*+1 ;INITIAL TURNS OF LIGHT
NOLIFT *=*+1 ;CAN'T LIFT FLAG
CANDO *=*+1 ;VALID COMMAND
NOTYET *=*+1 ;CAN'T DO YET FLAG
RAND *=*+1 ;RANDOM NUMBER
LOOKF *=*+1 ;FLAG TO INDICATE THAT A HEADER HAS ALREADY BEEN PRINTED
*=*+$28 ;FILLER
 ;ADVENTURE SHELL
 ;MAIN PROGRAM
 ; BASED UPON PIRATE ADVENTURE
 ; BY M. SCOTT ADAMS
 ;NOTE- LXXX REFERS TO THE BASIC LINENUMBER
*=$80F
JMP INIT
STROUT ;STRING PRINT ROUTINE
 STA PRTLOO+1
 STY PRTLOO+2
 LDX #0
PRTLOO LDA $FFFF,X
 BEQ STREND
 JSR OUTCH
 INX
 BNE PRTLOO
STREND RTS ;END STROUT
CRLF ;PRINT CARRIAGE RETURN
 LDA #CR ;LOAD A WITH CRLF
 JMP OUTCH ;PRINT IT AND RETURN
INIT LDA #$E
 STA PCR ;SET LOWER CASE
 LDA #<MSGA
 LDY #>MSGA
 JSR STROUT ;PRINT FIRST HALF
 LDA #<MSGB
 LDY #>MSGB
 JSR STROUT ;PRINT SECOND HALF
GETL1
 JSR CGETL ;WAIT FOR KEY
 BEQ GETL1
 LDX #0 ;LOAD SYSTEM PAGE
SPGSTR
 LDA SYSPAG,X
 STA INPBUF,X
 DEX
 BNE SPGSTR
BL130 LDA #CLS
 JSR OUTCH ;CLEAR SCREEN
 JSR BL240 ;PRINT ROOM
 JMP BL160 ;DO SCAN FOR RANDOM EVENTS
BL140 LDA #<PROMPT
 LDY #>PROMPT
 JSR STROUT ;PRINT 'WHAT NOW?'
 LDX #BUFLEN-1 ;EMPTY INPUT BUFFER
 LDA #SP
BUFLOO STA INPBUF,X
 DEX
 BNE BUFLOO
INPUT LDX #0
INPLOO JSR CINCH ;INPUT CHARACTERS WITH CURSOR
 JSR CINCH
 STA INPBUF,X
 INX
 CMP #$D
 BNE INPLOO
 LDA INPBUF
 CMP #$D
 BNE INPEND
 LDA #0
 STA INPBUF
 JMP INPUT
INPEND LDA #0
STA INPBUF-1,X
 LDX #3
VLOOP LDA INPBUF-1,X
 STA COMSTR-1,X
 DEX
 BNE VLOOP
 LDA #SP
 STA COMSTR+3
 LDX #0
 LDY #0
SPLOO INX
NSPLOO LDA INPBUF-1,X
 CMP #SP
 BNE SPLOO
 INX
 LDA INPBUF-1,X
 CMP #SP
 BEQ NSPLOO
NLOO LDA INPBUF-1,X
 STA COMSTR+3,Y
 INY
 INX
 CPY #3
 BNE NLOO
;TEST LINES
 LDA #0
 STA COMSTR+7
 LDA <COMSTR
 LDY >COMSTR
 JSR STROUT
 JMP INPUT
BL160 JMP BL140
BL240 LDA DARKF ;IS ROOM DARK?
 BEQ CANSEE ;NO
 LDX #9 ;TORCH/FLASHLIGHT NUMBER
 LDA ILTAB,X ;WHERE IS ITEM
 CMP #$FF ;IN HAND?
 BEQ CANSEE ;YES
 CMP ROOMN ;IN ROOM?
 BEQ CANSEE ;YES
 LDA #<DRKTXT
 LDY #>DRKTXT
 JSR STROUT ;PRINT 'I CAN'T SEE'
 RTS
CANSEE LDX #$FF
 STX LOOKF ;SET FLAG
 LDA ROOMN ;GET CURRENT ROOM
 ASL ;DOUBLE IT
 TAX ;PUT .A IN .X
 LDA ROOMP,X
 LDY ROOMP+1,X
 STA INDEX
 STY INDEX+1
 LDY #0
 LDA (INDEX),Y ;GET FIRST CHR FROM ROOM TEXT
 CMP #'* ;IS IT A FLAG?
 BNE NORROO ;PRINT NORMAL ROOM
 LDX INDEX
 LDY INDEX+1
 INX
 BNE NOCAR1
 INY
NOCAR1 TXA ;PUT .X IN .A
 JMP PNTROO ;GO PRINT IT
NORROO LDA #<IMTXT
 LDY #>IMTXT
 JSR STROUT
 LDA INDEX
 LDY INDEX+1
PNTROO JSR STROUT
 RTS
.END
